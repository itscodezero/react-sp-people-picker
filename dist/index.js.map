{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/user-profile-api.js","../src/index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const SP_SITE_URL = window._spPageContextInfo\n  ? window._spPageContextInfo.siteAbsoluteUrl\n  : null\nconst PEOPLE_PICKER_URL =\n  '/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.ClientPeoplePickerSearchUser'\n\nexport async function getUserSuggesstions(query) {\n  if (!SP_SITE_URL) {\n    return 'This people picker works only in SharePoint context'\n  }\n  const queryURL = SP_SITE_URL + PEOPLE_PICKER_URL\n  try {\n    const results = await postDataByRest(queryURL, query)\n    return results\n  } catch (error) {\n    console.log(error)\n    throw error\n  }\n}\n\nexport async function postDataByRest(restUrl, data) {\n  const webUrl = window._spPageContextInfo.siteServerRelativeUrl\n  return getFormDigest(webUrl).then(function (formDigestData) {\n    return fetch(restUrl, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json;odata=verbose',\n        Accept: 'application/json;odata=verbose',\n        'X-RequestDigest':\n          formDigestData.d.GetContextWebInformation.FormDigestValue\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.json().then(function (json) {\n        let result = []\n        if (json.d.ClientPeoplePickerSearchUser) result = json\n        return result\n      })\n    })\n  })\n}\n","import React, { useState, Fragment } from 'react'\nimport * as spPeoplePickerAPI from './user-profile-api'\nimport styles from './styles.module.css'\nimport './search-icon.png'\n// default queryPamrams\nconst userQueryObj = {\n  queryParams: {\n    QueryString: '',\n    MaximumEntitySuggestions: 10,\n    AllowEmailAddresses: true,\n    AllowOnlyEmailAddresses: false,\n    PrincipalSource: 2,\n    PrincipalType: 1,\n    SharePointGroupID: 0\n  }\n}\nconst SpPeoplePicker = (props) => {\n  const [activeSuggestion, setActiveSuggestion] = useState('')\n  const [filteredSuggestions, setFilteredSuggestions] = useState([])\n  const [showSuggestions, setShowSuggestions] = useState([])\n  const [userInput, setUserInput] = useState('')\n\n  const onChange = (e) => {\n    let userQuery = Object.assign({}, userQueryObj)\n    userQuery.queryParams.QueryString = e.currentTarget.value\n\n    spPeoplePickerAPI\n      .getUserSuggesstions(userQuery)\n      .then((data) => {\n        if (\n          data &&\n          data.d.ClientPeoplePickerSearchUser &&\n          data.d.ClientPeoplePickerSearchUser.length > 0\n        ) {\n          let jsonData = JSON.parse(data.d.ClientPeoplePickerSearchUser)\n          jsonData = jsonData.map((item) => {\n            if (item.EntityData.Email) return item\n            else {\n              const strSpilt = item.Key.split('|')\n              item.EntityData.Email = strSpilt[2]\n              return item\n            }\n          })\n          setActiveSuggestion('')\n          setFilteredSuggestions(jsonData)\n          setShowSuggestions(true)\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    setUserInput(e.currentTarget.value)\n    props.onSelect(null)\n  }\n\n  const onClick = (e) => {\n    setActiveSuggestion(0)\n    setFilteredSuggestions([])\n    setShowSuggestions(false)\n    setUserInput(e.DisplayText)\n    props.onSelect(e)\n  }\n\n  const onKeyDown = (e) => {\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      setActiveSuggestion(0)\n      setShowSuggestions(false)\n      setUserInput(filteredSuggestions[activeSuggestion].DisplayText)\n      props.onSelect(filteredSuggestions[activeSuggestion])\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return\n      }\n      if (activeSuggestion === '') {\n        setActiveSuggestion(0)\n      } else {\n        setActiveSuggestion(activeSuggestion - 1)\n      }\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion === filteredSuggestions.length - 1) {\n        return\n      }\n      if (activeSuggestion === '') {\n        setActiveSuggestion(0)\n      } else {\n        setActiveSuggestion(activeSuggestion + 1)\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className={styles.requestSearchBox}>\n        <input\n          type='text'\n          placeholder='Start typing name or email address..'\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          value={userInput}\n        />\n        {/* <img src='./searchIcon.png' className={styles.requestSearchIcon} />\n        <span className={styles.requestSearchIcon} /> */}\n\n        {showSuggestions && userInput ? (\n          filteredSuggestions.length > 0 ? (\n            <SuggestionListComponent\n              activeSuggestion={activeSuggestion}\n              filteredSuggestions={filteredSuggestions}\n              handleParentClick={onClick}\n            />\n          ) : userInput.length > 3 ? (\n            <div className={styles.noSuggestions}>\n              <em>No maching user found!</em>\n            </div>\n          ) : (\n            <></>\n          )\n        ) : (\n          <></>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default SpPeoplePicker\n\nconst SuggestionListComponent = (props) => {\n  const handleClick = (e) => {\n    props.handleParentClick(e)\n  }\n\n  return (\n    <ul className={styles.suggestions}>\n      {props.filteredSuggestions.map((suggestion, index) => {\n        return (\n          <li\n            key={suggestion.EntityData.Email + '-' + index}\n            onClick={(e) => {\n              handleClick(suggestion)\n            }}\n          >\n            {`${suggestion.DisplayText}`}\n            <p>{`${suggestion.EntityData.Email}`}</p>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n"],"names":["postDataByRest","restUrl","data","webUrl","window","_spPageContextInfo","siteServerRelativeUrl","getFormDigest","then","formDigestData","fetch","method","headers","Accept","d","GetContextWebInformation","FormDigestValue","credentials","body","JSON","stringify","response","json","result","ClientPeoplePickerSearchUser","getUserSuggesstions","query","SP_SITE_URL","queryURL","PEOPLE_PICKER_URL","error","console","log","siteAbsoluteUrl","userQueryObj","queryParams","QueryString","MaximumEntitySuggestions","AllowEmailAddresses","AllowOnlyEmailAddresses","PrincipalSource","PrincipalType","SharePointGroupID","SpPeoplePicker","props","useState","activeSuggestion","setActiveSuggestion","filteredSuggestions","setFilteredSuggestions","showSuggestions","setShowSuggestions","userInput","setUserInput","onChange","e","userQuery","Object","assign","currentTarget","value","spPeoplePickerAPI","length","jsonData","parse","map","item","EntityData","Email","strSpilt","Key","split","err","onSelect","onClick","DisplayText","onKeyDown","keyCode","React","Fragment","styles","requestSearchBox","noSuggestions","SuggestionListComponent","handleClick","handleParentClick","suggestions","suggestion","index"],"mappings":"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"}